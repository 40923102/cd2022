var tipuesearch = {"pages": [{'title': 'About', 'text': '\n 個人網站: https://40923102.github.io/cd2022/content/index.html \n 個人倉儲 : https://40923102.github.io/cd2022/ \n \n 小組網站: https://40923102.github.io/cd2022ag2-2/ \n 小組倉儲: https://github.com/40923102/cd2022ag2-2 \n \n 大組網站: https://40923102.github.io/cd2022ag2/ \n 大組倉儲: https://github.com/40923102/cd2022ag2 \n \n \n cmsimde_site \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'Blog', 'text': '\n 網站網址: https://40923102.github.io/cd2022/blog/index.html \n \n', 'tags': '', 'url': 'Blog.html'}, {'title': 'w10_block_ui-1', 'text': '\n 在影片中加入註解說明後,  分別以 \n (1) w10_block_ui 、 (2)w10_nx_integ  、 (3) w10_ssh  作為標題 ,  將說明影片嵌入個人  cd2022  網站頁面   及  blog  網誌中 . \n \xa0 \n w10-1  任務執行步驟 : \n > 下載  w10_block_ui.wnk \n > 利用  Wink  開啟專案 \n > 在各頁面加入說明標註 \n > 若有其他附加頁面 ,  則需縮至  1008x630  後插入適當位置 \n > 完成後轉出對應的  mp4  放入頁面與網誌 \n run_journal: 若以  NXOpen Python API  為例 ,  可以安排將  AJAX  送進  Server  的設計變數存為檔案 ,  然後由  run_journal.exe  執行的  Python  程式讀進設計變數後 ,  驅動  NX12 、 NX1980  或  NX2008  後將結果透過  URL  傳回前端瀏覽器端 . \n \xa0 \n', 'tags': '', 'url': 'w10_block_ui-1.html'}, {'title': 'w10_block_ui-2', 'text': '', 'tags': '', 'url': 'w10_block_ui-2.html'}, {'title': 'w10_nx_integ', 'text': '', 'tags': '', 'url': 'w10_nx_integ.html'}, {'title': 'w10_ssh', 'text': '\n', 'tags': '', 'url': 'w10_ssh.html'}, {'title': '小組', 'text': '第二組 \n \n 組長: 40923105 吳芷萱 \n 組員: \n 40923102 王悅禎 \n 40923104 江宜珊 \n 40923106 巫翊婕 \n 40923107 李宛諭 \n 40923110 林芳羽 \n 40923121 沈諒祖 \n 40923153 陳仲凱 \n \n', 'tags': '', 'url': '小組.html'}, {'title': 'ag2-1', 'text': '\n 組長: 40923105 吳芷萱 \n 組員: \n 40923104 江宜珊 \n 40923106 巫翊婕 \n 40923121 沈諒祖 \n \n', 'tags': '', 'url': 'ag2-1.html'}, {'title': 'ag2-2', 'text': '組長: 40923 107 李宛諭 \n 組員: \n 40923102 王悅禎 \n 40923110 林芳羽 \n 40923153 陳仲凱 \n \n', 'tags': '', 'url': 'ag2-2.html'}, {'title': '分組名單', 'text': '第2組: repo: \xa0 40923102 \xa0 www: \xa0 40923102 \xa0 cd2022ag2-repo: \xa0 40923102 \xa0 cd2022ag2-www: \xa0 40923102 repo: \xa0 40923104 \xa0 www: \xa0 40923104 \xa0 cd2022ag2-repo: \xa0 40923104 \xa0 cd2022ag2-www: \xa0 40923104 repo: \xa0 40923105 \xa0 www: \xa0 40923105 \xa0 cd2022ag2-repo: \xa0 40923105 \xa0 cd2022ag2-www: \xa0 40923105 repo: \xa0 40923106 \xa0 www: \xa0 40923106 \xa0 cd2022ag2-repo: \xa0 40923106 \xa0 cd2022ag2-www: \xa0 40923106 repo: \xa0 40923107 \xa0 www: \xa0 40923107 \xa0 cd2022ag2-repo: \xa0 40923107 \xa0 cd2022ag2-www: \xa0 40923107 repo: \xa0 40923110 \xa0 www: \xa0 40923110 \xa0 cd2022ag2-repo: \xa0 40923110 \xa0 cd2022ag2-www: \xa0 40923110 repo: \xa0 40923121 \xa0 www: \xa0 40923121 \xa0 cd2022ag2-repo: \xa0 40923121 \xa0 cd2022ag2-www: \xa0 40923121 repo: \xa0 40923153 \xa0 www: \xa0 40923153 \xa0 cd2022ag2-repo: \xa0 40923153 \xa0 cd2022ag2-www: \xa0 40923153 \n \n', 'tags': '', 'url': '分組名單.html'}, {'title': '每周進度', 'text': '\n 期中考:W9 繪圖 \n \n 期末: \n W16:練習 \n W17:測試及自評 \n W18:測試及自評 \n \n', 'tags': '', 'url': '每周進度.html'}, {'title': 'W1', 'text': 'CADLab中的IPv6網路設定 https://mde.tw/wcm2022/content/index.html \xa0 (參考) 下載檔案 \n 由於許多免費軟體可能藏有病毒，如果做好網路措施則防範於未然 \n 【1】IPv6執行時 ， 需要 1_2022_cadlab_network_setup.reg 與 1_disable_ipv4.ps1 兩個檔案:  1_2022_cadlab_network_setup.reg \n 主要是關閉自動偵測 proxy ，  且手動設定代理主機. \n 【2】筆電則是利用IPv6投影到桌機上 使用遠端畫面(尚未成功) \n \n 協同產品設計實習承接電腦輔助設計實習課程, 著重在探討多人模式下 ，  如何有效執行與機電系統設計相關的產品開發流程  (人與人協同, 人與機器協同, 機器與機器協同) \n 分組 四人一小組，兩小組為一大組 \n 下載 NX1980 \n \n', 'tags': '', 'url': 'W1.html'}, {'title': 'W2', 'text': '(1)確認分組後，人數不足由老師那方做運算分配至每組八位成員 \n (2)建立小組倉儲並整合 \n \n', 'tags': '', 'url': 'W2.html'}, {'title': 'W3', 'text': '利用 NX1980 繪製 uArm 機械手臂的協同設計 \n (1)  下載NX1980 \n \n (2) 每一學員分配 5 個影片 ， 根據影片中的教學內容 ， 以 Wink 影片互相對照的方式採 NX1980 執行操作進行整理 ， 完成後請將所負責的 Wink 教學影片嵌入個人與大分組的 w3 標題頁面中. \n \n \n \n 任務參考 \n', 'tags': '', 'url': 'W3.html'}, {'title': 'W4', 'text': '小組與大組成員開會討論後，在上課時段中直接利用網頁簡報呈現W3結果. \n \n', 'tags': '', 'url': 'W4.html'}, {'title': 'W5', 'text': '', 'tags': '', 'url': 'W5.html'}, {'title': 'W6', 'text': '(1) 建立個人 Blog 並查驗 \n 使用Leo製作個人 Blog\xa0( 我的Blog \xa0) \n \xa0 \n > 在  cmd  輸入  leo  啟動  Leo Editor \n > 開啟檔案 (config 資料夾中的  pelican.leo) \n > 找到  @edit pelicanconf.py\xa0  變更網誌編輯者名稱及標題。 \n > 找到  @edit publishconf.py  中，將  SITEURL  改成自己網站中的  Blog  網址 \n > 編輯  pages  目錄中的  .md  檔案，改成自己網站的網址。 \n > 以 @edit 為檔名開頭，存為  .md  檔， Slug  更改為當週查驗的標題。 \n > 回到  cmd  ，然後推送至遠端 \n \n', 'tags': '', 'url': 'W6.html'}, {'title': 'W7', 'text': '(1)查驗網誌 \n (2) git clone \xa0 https://github.com/mdecourse/scarysim.git \n >修改 scarysim.pro, 蓋掉第 11 行, 成為 # LIBS\xa0\xa0\xa0\xa0 += -lglut -lGLU \n >cd scarysim \n >qmake -o Makefile scarysim.pro \n >mingw32-make -f Makefile.Release 可以在 release 目錄取得 scarysim.exe \n \n (3)繪製 Pick and Place demo 範例所需的零組件，並完成 Coppeliasim 4.1.0、4.2.0 與 4.3.0 版的 MTB 機械手臂 Pick and Place 模擬， 完成後請說明在使用不同 MCAD 系統與版次的情況下，該如何執行協同產品設計專案 \n \n 工作分配 \n Solvespace:\xa0 40923104 \n Onshape:\xa0 \xa0 \xa0 40923106 \n NX1980:\xa0 \xa0 \xa0\xa0 40923102 \n NX2008:\xa0 \xa0 \xa0  40923107 \n NX12:\xa0 \xa0 \xa0 \xa0 \xa0\xa0 40923110 \n \n 我繪製的檔案: \n 1. NX12、NX1980 \n 2.檔案連結: \n https://drive.google.com/drive/folders/1JDAeTbkdAOVRxUjLb1HObfLt78RIWofu?usp=sharing \n \n \n \n', 'tags': '', 'url': 'W7.html'}, {'title': 'W8', 'text': '(1)查驗網誌 \n 當日記事: leo 的內部建立節點檔名不需要重複輸入 html ，在資料夾內部已產生 html 檔案 \n (2) 工作分配 \n Onshape ： 40923104 、 40932106 \n NX1980 ： 40923102 、 40923110 \n Solvespace ： 40923105 、 40923107 \n 圖檔網址 https://drive.google.com/drive/folders/1X03fJgd8utmThPyCZ-ExgXPFgtHjj4yg?usp=sharing \n \n 負責部分截圖: \n \n \n', 'tags': '', 'url': 'W8.html'}, {'title': 'W9', 'text': '期中考周 \n (1)自評成績 \n (2)自我檢測及個人作業 \n (3)自行補充前面課程 \n \n \n', 'tags': '', 'url': 'W9.html'}, {'title': 'W11', 'text': '1.( 要寫心得 ) 以每兩人一小組的方式，在組長帳號下的分組倉儲中的同一網頁  ( 標題為  w11s1 ~w11s4)  加入個人  w8-w10  協同設計過程所負責的項目內容與心得 .  過程中請參考下列  Wink  影片解決可能產生的衝突，最後並將  git pull  至  acp  的操作過程，建立  Wink  影片後，以組員為單位嵌入個人負責的協同網頁中 . \n 2. 搜尋  STL  檔案中的  ASCII  與  Binary  格式，舉例說明這兩種零件檔案格式如何定義 ? \n 試著將 Link2  零件檔案轉入  Coppeliasim  後，分別以兩種  XML  格式轉出，並以  Leo Editor  導入後比較其內容差異 . CoppeliaSim  兩種  XML  格式中的  tags \n \xa0 \n 40923102 心得 ： \n W8 開始繪製 UARM ，我被分配到大一有學過的 NX12 ，雖然不太熟悉，但是有另一位同學協助我完成繪製，剩下的是由小組長及大組長幫忙完成的。 \n \n', 'tags': '', 'url': 'W11.html'}, {'title': 'W12', 'text': '1.cd2022_uarm_nx12_imported.7z  中 ,  若計入重複引用的零件 ,  總數有多少 ?  請列出組成此一  2.uarm  機械手臂所需的  BOM  列表 . \n 3. 若不計入重複引用的零件 ,  總數有多少 ?  請列出各零件名稱 . \n 4. 當執行機械手臂的設計過程中 ,  若已知各零件所擬採用的零件材料密度 ,  請問此一設計中的  uarm  機械手臂的淨重量為多少 ? (uArm-Swift-Specifications.pdf) \n 5. 當執行機械手臂設計與製程規劃時 ,  若已知各零件擬採行的製造程序、取得方法與所需時間及成本 ,  請問此一設計中的  uarm  機械手臂 ,  該如何計算一定數量需求下 ,  需花費多少時間 ?  如何計算成本 ? \n', 'tags': '', 'url': 'W12.html'}, {'title': 'Online', 'text': '', 'tags': '', 'url': 'Online.html'}, {'title': 'W13', 'text': '(1) 在  CoppeliaSim 4.3.0  中解譯  Python scripts  設定 :C:\\CoppeliaSimEdu_4.3.0_ \n rev3\\system\\usrset.txt \n (2)Microsoft Teams 心得 \n 內容: 編輯 leo 做 Blog 及 NX 繪製 \n 心得: 學習到新的網站及不同的編輯方式 \n \xa0 \n', 'tags': '', 'url': 'W13.html'}, {'title': 'W14', 'text': '說明如何利用 CoppeliaSim 4.3.0 rev3  編寫  Python scripting,  以及如何因應各套件快速改版 .  說明如何利用  NX2027  開啟  MTB robot  範例 \n 以 MTB  機械手臂為例 ,  從  NX12  繪製零組件後轉入  CoppeliaSim 4.3.0  後 ,  如何利用  Lua Script  以鍵盤按鍵控制桿件移動 \n 說明 Teams  中指定作業的目的 .  示範如何利用動態網頁中的  Edit All  或  Edit  處理不同近端改版內容與遠端倉儲資料的衝突 .  最後示範如何在  Onedrive  環境中將上傳影片或檔案設為共享 \n \n 作業: \n 繳交Uram檔案: https://drive.google.com/drive/folders/1X03fJgd8utmThPyCZ-ExgXPFgtHjj4yg?usp=sharing \n \n', 'tags': '', 'url': 'W14.html'}, {'title': 'W15', 'text': '(1)因為系上的 NX 認證主機送修，所以目前的NX12不能使用 \n 所以 NX12更正成(下圖)就可以繼續使用了 \n \n \n (2)作業: NX + CoppeliaSim + Suction Pad - Pick and Place Scene Creation2 \n 參考 w7任務中的 MTB robot pick and place 場景,以N12繪製 MTB robot 零組件後 ， 匯入CoppeliaSim 4.3.0rev3 建立bject取放模擬場景 ， 完成後上傳 \n \n (3)uArm robot NX12  與  Coppeliasim  場景建立 \n \n 協同設計考量: \n (1) 採行方法是否具備永續性 ( 態度要積極 , 方法可能最佳化 ) 與韌性 ( 方法要能随環境調變 ) \n (2) 要有同理心 \n (3) 要能換位思考 \n (4) 要有產品生命週期的概念 \n (5) 要步步為營 \n (6) 不要過早下不必要的決定 \n \n', 'tags': '', 'url': 'W15.html'}, {'title': 'W16', 'text': '', 'tags': '', 'url': 'W16.html'}, {'title': 'W17', 'text': '', 'tags': '', 'url': 'W17.html'}]};